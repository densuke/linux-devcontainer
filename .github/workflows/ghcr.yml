# それぞれタグとして、ビルド時のepoch秒を設定する、これは人によりイメージが異なることを防ぐためである

name: image CI
on:
  # ディレクトリdockerに変更があったときに実行
  push:
    paths:
      - "docker/**"
      - ".github/workflows/ghcr.yml"
  # 手動で実行する場合
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  repo-check:
    runs-on: ubuntu-latest
    steps:
      - name: ソース取得
        uses: actions/checkout@v4
      - name: このリポジトリがphp-devcontainerであることを確認
        run: |
          # このリポジトリの名前を取得する
          repo_name="$(basename "$(pwd)")"
          # このリポジトリの名前がlinux-devcontainerであることを確認し、そうでなければエラーを出して停止
          if [ "$repo_name" != "linux-devcontainer" ]; then
            echo "このリポジトリはイメージビルド用リポジトリではありません"
            exit 1
          fi
  build:
    runs-on: ubuntu-latest
    needs: repo-check
    permissions:
      contents: read
      packages: write
    steps:
      - name: 現在時刻のEpoch秒を取得してタグに利用
        id: epoch
        run: echo "epochtime=$(date +%s)" >> "$GITHUB_OUTPUT"
      - name: タグ名の確認
        run: echo "epoch = ${{ steps.epoch.outputs.epochtime }}"
      - name: ソース取得
        uses: actions/checkout@v4
      - name: コンテナレジストリへのログイン
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: メタデータの取得(Docker)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # latestタグも追加
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
            # ${{ steps.epoch.outputs.epoch }}
          # タグとして先程取得したepochの値を設定
          tags: |
            ${{ steps.epoch.outputs.epochtime }}
            ${{ github.ref_name }}
      - name: Docker Buildxのセットアップ
        uses: docker/setup-buildx-action@v3
      - name: Dockerイメージのビルド(プッシュ無し)
        uses: docker/build-push-action@v4
        with:
          context: docker
          # file: ./Dockerfile
          push: true
          # load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          secrets: |
            "PASSWORD=${{ secrets.PASSWORD }}"
